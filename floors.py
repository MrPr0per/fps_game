from geometric_classes import Floor, Build, Column
import math
from settings import *
from resourses import *
from enemy import *


def load_floor(num_floor):
    floor = None
    # if num_floor == 1:
    #     point_list = [
    #         Point(-1, 0),
    #         Point(1, 0),
    #     ]
    #     build = Build(column_list=point_list, is_closed=False)
    #     floor = Floor(build_list=[build])
    # if num_floor == 2:
    #     floor = Floor(build_list=[
    #         Build(column_list=[
    #             Point(0, 0),
    #             Point(1, 0),
    #             Point(1, 1),
    #             Point(0, 1),
    #         ], is_closed=True),
    #         Build(column_list=[
    #             Point(2, 0),
    #             Point(4, 0),
    #             Point(3, -2),
    #         ], is_closed=True),
    #         Build(column_list=[
    #             Point(5, 1),
    #             Point(5, 0),
    #             Point(10, 0),
    #             Point(10, 5),
    #             Point(5, 5),
    #             Point(5, 4),
    #         ], is_closed=False),
    #     ])
    # if num_floor == 3:
    #     build_list = []
    #     for i in range(-20, 20):
    #         i *= 4
    #         build = Build(column_list=[
    #             Point(i, 0),
    #             Point(i + 2, 0),
    #             Point(i + 2, 2),
    #             Point(i, 2),
    #         ], is_closed=True)
    #         build_list.append(build)
    #     floor = Floor(build_list)
    # if num_floor == 4:
    #     floor = Floor(build_list=[
    #         Build(column_list=[
    #             Point(-1, 0),
    #             Point(-1, -1),
    #             Point(1, -1),
    #             Point(1, 0),
    #             Point(2, 0),
    #             Point(4, 1),
    #             Point(5, 2),
    #             Point(6, 4),
    #             Point(6, 6),
    #             Point(8.8747526, 6),
    #             Point(9, 8),
    #             Point(2, 8),
    #             Point(2, 6),
    #             Point(4.8967929, 6),
    #             Point(5, 4),
    #             Point(4, 2),
    #             Point(2, 1),
    #             Point(1, 1),
    #             Point(1, 2),
    #             Point(-1, 2),
    #             Point(-1, 1),
    #         ], is_closed=False),
    #         Build(column_list=[
    #             Point(-1, 1),
    #             Point(-2, 1),
    #             Point(-2, 3),
    #             Point(-1, 3),
    #             Point(-1, 5),
    #             Point(-3, 5),
    #             Point(-3, 3),
    #             Point(-2.5598684000000023, 3),
    #             Point(-2.543763300000002, 1),
    #             Point(-2.5598684000000023, 0),
    #             Point(-1, 0),
    #         ], is_closed=False),
    #     ])
    if num_floor == 5:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(-1, 3),
                Column(-4, 3),
                Column(-4, -3.158609382000001),
                Column(4.871746100000002, -3),
                Column(5, 3),
                Column(1, 3),
                Column(1, 6),
                Column(4.554145636501002, 8.180376635282004),
                Column(4.683832759506002, 10),
                Column(6.266015660167003, 10),
            ], is_closed=False),
            Build(column_list=[
                Column(6.381598826237731, 13.152590148725595),
                Column(4.759031355472972, 13.152590148725595),
                Column(4.275713385457938, 14.809680331634285),
                Column(0.3056014889058689, 18.33099697031525),
                Column(-5.252555166267028, 15.569179998800767),
                Column(-4.803759908395924, 13),
                Column(-7.116781622039304, 13),
            ], is_closed=False),
            Build(column_list=[
                Column(-7, 10),
                Column(-4.631146347676269, 10.149114192203594),
                Column(-4.424010074812683, 7.594433493552698),
                Column(-1, 6),
                Column(-1, 3),
            ], is_closed=False),
            Build(column_list=[
                Column(-7, 10),
                Column(-9.119098926387304, 9.251523676461387),
                Column(-11, 7.352774508545181),
                Column(-11.777347761469994, 5.454025340628974),
                Column(-12.157097595053235, 3.4862307484249047),
                Column(-12.32971115577289, 1.65652700479656),
                Column(-12.536847428636477, 0.10300495831966333),
            ], is_closed=False),
            Build(column_list=[
                Column(-7.254872470615028, 13),
                Column(-9.153621638531234, 12.876408451574147),
                Column(-11.501166064318545, 12.32404505727125),
                Column(-13, 11),
                Column(-14.124892187257304, 9),
                Column(-15.229618975863097, 5.730207037780422),
                Column(-15.471277960870614, 4),
                Column(-15.712936945878132, 1.4839134440769048),
                Column(-15.747459658022063, 0),
                Column(-18, 0),
                Column(-21.581798010346407, -7.1812873040497855),
                Column(-14.159414899401234, -13.36085277781344),
                Column(-6.806077212743925, -7.215810016193716),
                Column(-10.154780290705235, 0),
                Column(-12.571370140780408, 0.10300495831966333),
            ], is_closed=False),
            Build(column_list=[
                Column(-17, -3.5909252410809573),
                Column(-14.193937611545167, -10.737126654874682),
                Column(-11.777347761469994, -3.3147435439295094),
                Column(-18, -7.595559849776958),
                Column(-10.6726209728642, -8),
            ], is_closed=True),
            Build(column_list=[
                Column(6.312553401949869, 13.187112860869526),
                Column(6.485166962669524, 19),
                Column(4.862599491904765, 19.159542061769596),
            ], is_closed=False),
            Build(column_list=[
                Column(6.2435079776620075, 10),
                Column(6.6232578112452485, -3),
                Column(16.117003650826284, -2.4861984524751644),
                Column(15.461072120091593, 21.852313608996216),
                Column(4.586417794753317, 21.852313608996216),
                Column(2.7567140511249724, 22.473722427586974),
                Column(3, 23.751062776912423),
                Column(4.862599491904765, 24),
                Column(6.105417129086283, 23.854630913344216),
            ], is_closed=False),
            Build(column_list=[
                Column(4.862599491904765, 19.228587486057457),
                Column(0.4782150496255241, 20.64401868395863),
                Column(-0.3158073296848897, 23.57844921619277),
                Column(0, 26),
                Column(3.4816910061475244, 26.65097059700263),
                Column(7.279189341979938, 26.65097059700263),
                Column(7.451802902699593, 28.169969931335597),
                Column(15.633685680811249, 28.239015355623458),
                Column(15.115844998652284, 22.818949549026286),
                Column(6.347076114093801, 23),
                Column(6.105417129086283, 23.854630913344216),
            ], is_closed=False),
            Build(column_list=[
                Column(8.107734433434283, 24.372471595503182),
                Column(8.832711388456834, 27),
                Column(9.108893085608283, 24.510562444078907),
            ], is_closed=False),
            Build(column_list=[
                Column(10, 26.443834324139043),
                Column(10, 24.786744141230354),
                Column(10.69693784422911, 24.6141305805107),
                Column(11.421914799251663, 25.166493974813594),
                Column(11.249301238532007, 27.34142483988125),
                Column(10.524324283509456, 27.30690212773732),
            ], is_closed=True),
            Build(column_list=[
                Column(12.595687012145317, 24.510562444078907),
                Column(13.389709391455732, 27.410470264169113),
                Column(14, 24.545085156222836),
            ], is_closed=False),
            Build(column_list=[
                Column(15.392026695803732, 21.817790896852284),
                Column(11.66357378425918, 19.711905456072493),
                Column(15.599162968667319, 19),
                Column(12.69925514857711, 16.70842949955049),
                Column(15.737253817243042, 16.225111529535457),
                Column(12.733777860721041, 13.566862694452768),
                Column(15.875344665818766, 12.738317602998423),
                Column(12.492118875713524, 10.35625046506718),
                Column(15.771776529386972, 9.35509181289318),
                Column(12.630209724289248, 7.421819932833043),
                Column(16, 6.2135250077954565),
                Column(13, 4.521912112742836),
                Column(16.220571787258077, 3.31361718770525),
                Column(13, 1.760095141228353),
                Column(16.427708060121663, 0.5518002161907668),
                Column(13, 0.20657309475145644),
                Column(16.25509449940201, -2.3826303160433713),
                Column(13.320663967167869, -1),
                Column(13.389709391455732, -2.6242893010508883),
                Column(12.250459890706008, -1.139812678861854),
                Column(11.69809649640311, -2.5207211646190952),
                Column(11, -1.208858103149716),
                Column(9.626733767767249, -2.6933347253387505),
                Column(9.177938509896146, -0.8291082695664747),
                Column(7.1065757812602826, -2.865948286058406),
                Column(8.314870706297869, 0.7934592011982841),
                Column(6.519689674813455, 1.65652700479656),
                Column(8.3493934184418, 4.418343976311043),
                Column(6.554212386957387, 5.557593477060767),
                Column(8, 7.387297220689112),
                Column(6.347076114093801, 7.7670470542723535),
            ], is_closed=False),
        ])
    if num_floor == 6:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(-1, 3),
                Column(-1, 5),
                Column(-2, 5),
                Column(-2, 6),
                Column(-4, 6),
                Column(-4, 4),
                Column(-5, 4),
                Column(-5, 3),
                Column(-1, 3),
            ], is_closed=False),
            Build(column_list=[
                Column(-4, 2),
                Column(-5, 2),
                Column(-5, -1),
                Column(-8, -1),
                Column(-8, 0),
                Column(-9, 0),
                Column(-9, -2),
                Column(-4, -2),
                Column(-4, 2),
            ], is_closed=False),
            Build(column_list=[
                Column(-9, 2),
                Column(-8, 2),
                Column(-8, 6),
                Column(-9, 6),
                Column(-9, 2),
            ], is_closed=False),
            Build(column_list=[
                Column(-4, 8),
                Column(-2, 8),
                Column(-2, 9),
                Column(-1, 9),
                Column(-1, 11),
                Column(-4, 11),
            ], is_closed=True),
            Build(column_list=[
                Column(-9, 8),
                Column(-8, 8),
                Column(-8, 11),
                Column(-9, 11),
            ], is_closed=True),
            Build(column_list=[
                Column(-9, 13),
                Column(-8, 13),
                Column(-8, 14),
                Column(-9, 14),
            ], is_closed=True),
            Build(column_list=[
                Column(-9, 16),
                Column(-8, 16),
                Column(-8, 17),
                Column(-9, 17),
                Column(-9, 16),
            ], is_closed=False),
            Build(column_list=[
                Column(-9, 19),
                Column(-8, 19),
                Column(-8, 23),
                Column(-9, 23),
            ], is_closed=True),
            Build(column_list=[
                Column(-9, 25),
                Column(-8, 25),
                Column(-8, 27),
                Column(-5, 27),
                Column(-5, 29),
            ], is_closed=False),
            Build(column_list=[
                Column(-9, 25),
                Column(-9, 27),
                Column(-12, 27),
                Column(-12, 28),
                Column(-9, 28),
                Column(-9, 31),
                Column(-7, 31),
                Column(-5, 29),
            ], is_closed=False),
            Build(column_list=[
                Column(-14, 28),
                Column(-14, 27),
                Column(-17, 27),
                Column(-17, 31),
                Column(-16, 31),
                Column(-16, 28),
            ], is_closed=True),
            Build(column_list=[
                Column(-17, 33),
                Column(-16, 33),
                Column(-16, 34),
                Column(-17, 34),
            ], is_closed=True),
            Build(column_list=[
                Column(-17, 36),
                Column(-16, 36),
                Column(-16, 37),
                Column(-17, 37),
            ], is_closed=True),
            Build(column_list=[
                Column(-17, 39),
                Column(-16, 39),
                Column(-16, 42),
                Column(-14, 42),
                Column(-14, 43),
                Column(-17, 43),
            ], is_closed=True),
            Build(column_list=[
                Column(-12, 43),
                Column(-12, 42),
                Column(-9, 42),
                Column(-9, 39),
                Column(-7, 39),
                Column(-5, 41),
                Column(-5, 43),
                Column(-8, 43),
                Column(-8, 45),
                Column(-9, 45),
                Column(-9, 43),
            ], is_closed=True),
            Build(column_list=[
                Column(-8, 47),
                Column(-8, 50),
                Column(-9, 50),
                Column(-9, 47),
                Column(-8, 47),
            ], is_closed=False),
            Build(column_list=[
                Column(5, 43),
                Column(5, 41),
                Column(7, 39),
                Column(9, 39),
                Column(9, 42),
                Column(12, 42),
                Column(12, 43),
                Column(9, 43),
                Column(9, 45),
                Column(8, 45),
                Column(8, 43),
                Column(5, 43),
            ], is_closed=False),
            Build(column_list=[
                Column(8, 47),
                Column(9, 47),
                Column(9, 50),
                Column(8, 50),
                Column(8, 47),
            ], is_closed=False),
            Build(column_list=[
                Column(-6, 50),
                Column(-6, 49),
                Column(-3, 49),
                Column(-3, 50),
                Column(-6, 50),
            ], is_closed=False),
            Build(column_list=[
                Column(-2, 50),
                Column(-2, 49),
                Column(6, 49),
                Column(6, 50),
                Column(-2, 50),
            ], is_closed=False),
            Build(column_list=[
                Column(-5, 50),
                Column(-4, 53),
                Column(-3, 54),
                Column(0, 55),
                Column(3, 54),
                Column(4, 53),
                Column(5, 50),
            ], is_closed=False),
            Build(column_list=[
                Column(-4, 50),
                Column(-3, 53),
                Column(0, 54),
                Column(3, 53),
                Column(4, 50),
            ], is_closed=False),
            Build(column_list=[
                Column(14, 43),
                Column(17, 43),
                Column(17, 39),
                Column(16, 39),
                Column(16, 42),
                Column(14, 42),
                Column(14, 43),
            ], is_closed=False),
            Build(column_list=[
                Column(16, 37),
                Column(17, 37),
                Column(17, 36),
                Column(16, 36),
            ], is_closed=True),
            Build(column_list=[
                Column(16, 34),
                Column(17, 34),
                Column(17, 33),
                Column(16, 33),
            ], is_closed=True),
            Build(column_list=[
                Column(16, 31),
                Column(17, 31),
                Column(17, 27),
                Column(14, 27),
                Column(14, 28),
                Column(16, 28),
            ], is_closed=True),
            Build(column_list=[
                Column(12, 28),
                Column(9, 28),
                Column(9, 31),
                Column(7, 31),
                Column(5, 29),
                Column(5, 27),
                Column(8, 27),
                Column(8, 25),
                Column(9, 25),
                Column(9, 27),
                Column(12, 27),
                Column(12, 28),
            ], is_closed=False),
            Build(column_list=[
                Column(8, 23),
                Column(9, 23),
                Column(9, 19),
                Column(8, 19),
                Column(8, 23),
            ], is_closed=False),
            Build(column_list=[
                Column(8, 17),
                Column(9, 17),
                Column(9, 16),
                Column(8, 16),
                Column(8, 17),
            ], is_closed=False),
            Build(column_list=[
                Column(8, 14),
                Column(9, 14),
                Column(9, 13),
                Column(8, 13),
                Column(8, 14),
            ], is_closed=False),
            Build(column_list=[
                Column(8, 11),
                Column(9, 11),
                Column(9, 8),
                Column(8, 8),
                Column(8, 11),
            ], is_closed=False),
            Build(column_list=[
                Column(8, 6),
                Column(9, 6),
                Column(9, 2),
                Column(8, 2),
                Column(8, 6),
            ], is_closed=False),
            Build(column_list=[
                Column(8, 0),
                Column(9, 0),
                Column(9, -2),
                Column(4, -2),
                Column(4, 3),
                Column(1, 3),
                Column(1, 5),
                Column(2, 5),
                Column(2, 6),
                Column(4, 6),
                Column(4, 4),
                Column(5, 4),
                Column(5, -1),
                Column(8, -1),
                Column(8, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(2, 8),
                Column(4, 8),
                Column(4, 11),
                Column(1, 11),
                Column(1, 9),
                Column(2, 9),
                Column(2, 8),
            ], is_closed=False),
        ])
    if num_floor == 7:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(i, 0, i, 0),
                Column(i + 1, 0, i, 0),
            ], is_closed=False)
            for i in range(2, 100)
        ])
    if num_floor == 8:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(x=0, y=0, h=2, h_down=0),
                Column(x=1, y=0, h=2, h_down=3),
                Column(x=2, y=0, h=2, h_down=0),
            ], is_closed=False),
            Build(column_list=[
                Column(x=3, y=0, h=5, h_down=0),
                Column(x=4, y=0, h=5, h_down=0),
            ], is_closed=False),
            Build(column_list=[
                Column(x=5, y=0, h=5, h_down=0),
                Column(x=6, y=0, h=5, h_down=0),
            ], is_closed=False),
            Build(column_list=[
                Column(x=4, y=0, h=1, h_down=4),
                Column(x=5, y=0, h=1, h_down=4),
            ], is_closed=False),
            Build(column_list=[
                Column(x=4, y=0, h=1, h_down=0),
                Column(x=5, y=0, h=1, h_down=0),
            ], is_closed=False),
            Build(column_list=[
                Column(x=7, y=0, h=2, h_down=0),
                Column(x=8, y=0, h=2, h_down=3),
                Column(x=9, y=0, h=2, h_down=0),
            ], is_closed=False),
            Build(column_list=[
                Column(x=-1, y=2, h=2, h_down=0),
                Column(x=10, y=2, h=2, h_down=3),
            ], is_closed=False),
            Build(column_list=[
                Column(x=-1, y=5, h=2, h_down=3),
                Column(x=10, y=5, h=2, h_down=0),
            ], is_closed=False),
        ])
    if num_floor == 9:
        floor = Floor(build_list=[])

        for i in range(100):
            for j in range(i - 2, i):
                b = Build(column_list=[
                    Column(1, i * 2, 1, j * 2),
                    Column(2, i * 2, 1, j * 2),
                    # Column(2, i * 2 + 1, 1, j * 2),
                    # Column(1, i * 2 + 1, 1, j * 2),
                ], is_closed=False
                )
                floor.build_list.append(b)

        b = Build(column_list=[
            Column(1, 1, 100, 0),
            Column(2, 1, 100, 0),
        ], is_closed=False)
        floor.build_list.append(b)
        b = Build(column_list=[
            Column(1, 100, 100, 0),
            Column(2, 100, 100, 0),
        ], is_closed=False)
        floor.build_list.append(b)
    if num_floor == 10:
        n = 20
        floor = Floor(build_list=[
            Build(column_list=[
                Column(-3, i * 4 + 0, 2, 5),
                Column(-3, i * 4 + 1, 1, 6),
                Column(-3, i * 4 + 2, 2, 5),
                Column(-3, i * 4 + 2, 7, 0),
                Column(-3, i * 4 + 4, 7, 0),
            ], is_closed=False) for i in range(-n, n)
        ])
        for i in range(-n, n):
            floor.build_list.append(
                Build(column_list=[
                    Column(3, i * 4 + 0, 2, 5),
                    Column(3, i * 4 + 1, 1, 6),
                    Column(3, i * 4 + 2, 2, 5),
                    Column(3, i * 4 + 2, 7, 0),
                    Column(3, i * 4 + 4, 7, 0),
                ], is_closed=False)
            )
        floor.build_list.append(
            Build(column_list=[
                Column(3, -n * 4, 1, 0),
                Column(3, n * 4, 1, 0),
            ], is_closed=False)
        )
        floor.build_list.append(
            Build(column_list=[
                Column(-3, -n * 4, 1, 0),
                Column(-3, n * 4, 1, 0),
            ], is_closed=False)
        )

    if num_floor == 11:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(-5, 0.5196453329084997, 3, 0),
                Column(-4.674522239345714, 2.345640024818901, 3, 0),
                Column(-2.477622375641013, 4.228697050851503, 3, 0),
                Column(-1, 4.685195723829103, 3, 0),
                Column(0, 4.599602222645805, 3, 0),
                Column(4.4839823872673925, 10.70527197372121, 3, 0),
                Column(1.5912358901095212, 15.47859328537737, 3, 0),
                Column(3.679859974817349, 24, 3, 0),
                Column(6, 16, 3, 0),
                Column(7.667233227441384, 14, 3, 0),
                Column(9, 15.592518235452342, 3, 0),
                Column(9, 18.630516904118274, 3, 0),
                Column(12, 20.263441188526212, 3, 0),
                Column(15, 17.75709228687682, 3, 0),
                Column(14.464755248581406, 15, 3, 0),
                Column(11.38878159655715, 14.37731876798597, 3, 0),
                Column(9.528007411999267, 12.326669666636466, 3, 0),
                Column(12.679931030740171, 11, 3, 0),
                Column(23, 13.54186913410284, 3, 0),
                Column(13, 7.389921830054328, 3, 0),
                Column(7.667233227441384, 9.32664598132886, 3, 0),
                Column(3, 3.2886236273553204, 3, 0),
                Column(4.439359641983834, 1, 3, 0),
                Column(4, -1.4582492924351975, 3, 0),
                Column(3, -2.7873737099765425, 3, 0),
                Column(5, -5.369672578342584, 3, 0),
                Column(5, -2, 3, 0),
                Column(9, -2, 3, 0),
                Column(9, -13, 3, 0),
                Column(8, -13, 3, 0),
                Column(8, -19, 3, 0),
                Column(10, -19, 3, 0),
                Column(5, -28, 3, 0),
                Column(5, -10, 3, 0),
                Column(6, -9, 3, 0),
                Column(2, -9, 3, 0),
                Column(4, -11, 3, 0),
                Column(4, -16, 3, 0),
                Column(0, -16, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(4, -16, 3, 0),
                Column(4, -23, 3, 0),
                Column(1, -23, 3, 0),
                Column(1, -18, 3, 0),
                Column(-2, -18, 3, 0),
                Column(-2, -14, 3, 0),
                Column(2, -14, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(0, -13.786354778988468, 3, 0),
                Column(0, -7, 3, 0),
                Column(3.7226738874766094, -7, 3, 0),
                Column(1, -3.649231122179627, 3, 0),
                Column(-1, -4.653528202730349, 3, 0),
                Column(-4.248934189394737, -4, 3, 0),
                Column(-5, -2, 3, 0),
                Column(-12, -2, 3, 0),
                Column(-12, -3, 3, 0),
                Column(-27, -3, 3, 0),
                Column(-27, -2, 3, 0),
                Column(-36, -2, 3, 0),
                Column(-40.453591440061786, -6.425505918341967, 3, 0),
                Column(-47.38666503590909, -3.4582645439875646, 3, 0),
                Column(-47.38666503590909, 3, 3, 0),
                Column(-39.569125261167684, 5.329334910831243, 3, 0),
                Column(-36, 2, 3, 0),
                Column(-27, 2, 3, 0),
                Column(-27, 1, 3, 0),
                Column(-12, 1, 3, 0),
                Column(-12, 2, 3, 0),
                Column(-5, 0.5931611786886387, 3, 0),
            ], is_closed=False),
        ])
    if num_floor == 12:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(-1.25, 2.5, 3.6, 0.0),
                Column(-7.5, 2.5, 3.6, 0.0),
                Column(-7.5, -1.25, 3.6, 0.0),
                Column(-5.0, -3.75, 3.6, 0.0),
                Column(3.75, -3.75, 3.6, 0.0),
                Column(3.75, -2.5, 3.6, 0.0),
                Column(5.0, -2.5, 3.6, 0.0),
                Column(6.25, -3.75, 3.6, 0.0),
                Column(6.25, -6.25, 3.6, 0.0),
                Column(-7.5, -6.25, 3.6, 0.0),
                Column(-10.0, -3.75, 3.6, 0.0),
                Column(-10.0, -1.25, 3.6, 0.0),
                Column(-11.25, -1.25, 3.6, 0.0),
            ], is_closed=False),
            Build(column_list=[
                Column(-11.25, -1.25, 1.2, 0.0),
                Column(-15.0, -1.25, 1.2, 0.0),
            ], is_closed=False),
            Build(column_list=[
                Column(-11.25, -1.25, 1.2, 2.4),
                Column(-15.0, -1.25, 1.2, 2.4),
            ], is_closed=False),
            Build(column_list=[
                Column(-15.0, -1.25, 3.6, 0.0),
                Column(-17.5, -1.25, 3.6, 0.0),
                Column(-26.25, 2.75, 3.6, 0.0),
                Column(-26.25, 10.0, 3.6, 0.0),
                Column(-23.75, 10.0, 3.6, 0.0),
                Column(-23.75, 7.5, 3.6, 0.0),
                Column(-15.0, 7.5, 3.6, 0.0),
            ], is_closed=False),
            Build(column_list=[
                Column(-15.0, 7.5, 1.2, 2.4),
                Column(-11.25, 7.5, 1.2, 2.4),
            ], is_closed=False),
            Build(column_list=[
                Column(-15.0, 7.5, 1.2, 0.0),
                Column(-11.25, 7.5, 1.2, 0.0),
            ], is_closed=False),
            Build(column_list=[
                Column(-11.25, 7.5, 3.6, 0.0),
                Column(-7.5, 7.5, 3.6, 0.0),
                Column(-5.0, 11.25, 3.6, 0.0),
                Column(-1.25, 11.25, 3.6, 0.0),
                Column(-1.25, 2.5, 3.6, 0.0),
            ], is_closed=False),
            Build(column_list=[
                Column(2.5, 2.5, 3.6, 0.0),
                Column(2.5, 13.75, 3.6, 0.0),
                Column(-6.25, 13.75, 3.6, 0.0),
                Column(-8.75, 10.0, 3.6, 0.0),
                Column(-12.5, 17.5, 3.6, 0.0),
                Column(-37.5, 17.5, 3.6, 0.0),
            ], is_closed=False),
            Build(column_list=[
                Column(-32.5, 15.84, 3.6, 0.0),
                Column(-30.0, 15.89, 3.6, 0.0),
                Column(-30.0, -5.0, 3.6, 0.0),
                Column(-32.5, -5.0, 3.6, 0.0),
                Column(-36.25, -3.75, 3.6, 0.0),
                Column(-38.75, -2.5, 3.6, 0.0),
                Column(-40.0, -1.25, 3.6, 0.0),
                Column(-41.25, 1.25, 3.6, 0.0),
                Column(-42.5, 5.0, 3.6, 0.0),
                Column(-42.5, 7.5, 3.6, 0.0),
                Column(-38.75, 11.25, 3.6, 0.0),
                Column(-32.5, 11.25, 3.6, 0.0),
                Column(-32.5, 15.8, 3.6, 0.0),
            ], is_closed=False),
            Build(column_list=[
                Column(-37.5, 17.5, 3.6, 0.0),
                Column(-46.25, 17.5, 3.6, 0.0),
                Column(-46.25, 7.5, 3.6, 0.0),
                Column(-45.0, 7.5, 3.6, 0.0),
                Column(-45.0, 3.75, 3.6, 0.0),
                Column(-43.75, 0.0, 3.6, 0.0),
                Column(-42.5, -2.5, 3.6, 0.0),
                Column(-40.0, -5.0, 3.6, 0.0),
                Column(-37.5, -6.25, 3.6, 0.0),
                Column(-33.75, -7.5, 3.6, 0.0),
                Column(-26.25, -7.5, 3.6, 0.0),
                Column(-26.25, -5.0, 3.6, 0.0),
                Column(-15.0, -5.0, 3.6, 0.0),
                Column(-12.5, -7.5, 3.6, 0.0),
                Column(-10.0, -8.75, 3.6, 0.0),
                Column(7.5, -8.75, 3.6, 0.0),
                Column(8.75, -7.5, 3.6, 0.0),
                Column(8.75, -2.5, 3.6, 0.0),
                Column(6.25, 0.0, 3.6, 0.0),
                Column(3.75, 0.0, 3.6, 0.0),
                Column(3.75, 2.5, 3.6, 0.0),
                Column(2.5, 2.5, 3.6, 0.0),
            ], is_closed=False),
        ])
    if num_floor == 13:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(-6, 0, 3, 0),
                Column(-6, -5, 3, 0),
                Column(6, -5, 3, 0),
                Column(6, 0, 3, 0),
                Column(4, 3, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(-6, 0, 3, 0),
                Column(-4, 3, 3, 0),
                Column(-5, 8, 3, 0),
                Column(-6, 11, 3, 0),
                Column(-7, 13, 3, 0),
                Column(-8, 14, 3, 0),
                Column(-9, 16, 3, 0),
                Column(-10, 19, 3, 0),
                Column(-11, 23.79, 3, 0),
                Column(-11, 30, 3, 0),
                Column(-10, 35, 3, 0),
                Column(-9, 38, 3, 0),
                Column(-8, 40, 3, 0),
                Column(-7, 41, 3, 0),
                Column(-6, 43, 3, 0),
                Column(-5, 46, 3, 0),
                Column(-4, 51, 3, 0),
                Column(-4, 57, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(4, 3, 3, 0),
                Column(3, 8, 3, 0),
                Column(2, 11, 3, 0),
                Column(1, 13, 3, 0),
                Column(0, 14, 3, 0),
                Column(-1, 16, 3, 0),
                Column(-2, 19, 3, 0),
                Column(-3, 24, 3, 0),
                Column(-3, 30, 3, 0),
                Column(-2, 35, 3, 0),
                Column(-1, 38, 3, 0),
                Column(0, 40, 3, 0),
                Column(1, 41, 3, 0),
                Column(2, 43, 3, 0),
                Column(3, 46, 3, 0),
                Column(4, 51, 3, 0),
                Column(4, 57, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(4, 60, 1, 0),
                Column(4, 61, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(4, 64, 1, 0),
                Column(4, 65, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(4, 68, 1, 0),
                Column(4, 69, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(4, 72, 1, 0),
                Column(4, 73, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(4, 76, 1, 0),
                Column(4, 77, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(4, 80, 1, 0),
                Column(4, 81, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(4, 84, 1, 0),
                Column(4, 85, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(4, 88, 1, 0),
                Column(4, 89, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(-4, 60, 1, 0),
                Column(-4, 61, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(-4, 64, 1, 0),
                Column(-4, 65, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(-4, 68, 1, 0),
                Column(-4, 69, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(-4, 72, 1, 0),
                Column(-4, 73, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(-4, 76, 1, 0),
                Column(-4, 77, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(-4, 80, 1, 0),
                Column(-4, 81, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(-4, 84, 1, 0),
                Column(-4, 85, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(-4, 88, 1, 0),
                Column(-4, 89, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(4, 89, 3, 0),
                Column(7.65, 73.7, 3, 0),
                Column(15.38, 55, 3, 0),
                Column(32, 35, 3, 0),
                Column(59.63, 28.44, 3, 0),
                Column(84.71, 26, 3, 0),
                Column(108.64, 29, 3, 0),
                Column(132.79, 38, 3, 0),
                Column(146.26, 59.33, 3, 0),
                Column(154, 88, 3, 0),
                Column(156, 114.38, 3, 0),
                Column(155.78, 144.57, 3, 0),
                Column(147.42, 164.54, 3, 0),
                Column(127.45, 174.76, 3, 0),
                Column(106, 180.33, 3, 0),
                Column(78.21, 181.26, 3, 0),
                Column(57.77, 178.71, 3, 0),
                Column(28.51, 170, 3, 0),
                Column(12, 159.66, 3, 0),
                Column(2, 138, 3, 0),
                Column(-3, 122, 3, 0),
                Column(-5, 103.69, 3, 0),
                Column(-4.43, 89.33, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(21, 106, 3, 0),
                Column(24, 85.27, 3, 0),
                Column(33.41, 66.22, 3, 0),
                Column(55.7, 53, 3, 0),
                Column(91.24, 49.5, 3, 0),
                Column(105, 53.68, 3, 0),
                Column(123, 68.78, 3, 0),
                Column(130.26, 91.3, 3, 0),
                Column(129.56, 111.28, 3, 0),
                Column(125, 137.52, 3, 0),
                Column(110, 152, 3, 0),
                Column(85, 152, 3, 0),
                Column(61, 147.74, 3, 0),
                Column(33, 133, 3, 0),
                Column(21.79, 113, 3, 0),
                Column(20.4, 106, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(39.57, 97, 3, 0),
                Column(39, 93.31, 3, 0),
                Column(36.3, 90, 3, 0),
                Column(40.33, 95, 3, 0),
                Column(51.47, 93.7, 3, 0),
                Column(65, 91.78, 3, 0),
                Column(85.63, 91.39, 3, 0),
                Column(98, 91.39, 3, 0),
                Column(107.52, 94, 3, 0),
                Column(113.66, 97, 3, 0),
                Column(114.23, 95.23, 3, 0),
                Column(115.58, 92.55, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(40, 94.27, 3, 0),
                Column(48.78, 85.25, 3, 0),
                Column(71, 72, 3, 0),
                Column(87, 69.51, 3, 0),
                Column(102, 73.35, 3, 0),
                Column(109.24, 82.56, 3, 0),
                Column(111.55, 93.31, 3, 0),
                Column(113, 96, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(45.52, 94.66, 3, 0),
                Column(50.32, 87, 3, 0),
                Column(52, 94, 3, 0),
                Column(55.69, 86, 3, 0),
                Column(57.61, 92.55, 3, 0),
                Column(62.41, 85, 3, 0),
                Column(66, 92, 3, 0),
                Column(73, 85, 3, 0),
                Column(77.76, 91.59, 3, 0),
                Column(81, 84.68, 3, 0),
                Column(86.21, 91, 3, 0),
                Column(89.28, 82.56, 3, 0),
                Column(93, 90.63, 3, 0),
                Column(97.73, 85.64, 3, 0),
                Column(101, 91.2, 3, 0),
                Column(103.29, 86.4, 3, 0),
                Column(106.56, 93.51, 3, 0),
                Column(109.63, 90, 3, 0),
                Column(111.74, 97, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(70, 73.35, 3, 0),
                Column(73.54, 75.27, 3, 0),
                Column(76.42, 71.43, 3, 0),
                Column(81.22, 74, 3, 0),
                Column(84.67, 70, 3, 0),
                Column(92, 75.46, 3, 0),
                Column(93.31, 72, 3, 0),
                Column(97.73, 77, 3, 0),
                Column(101.76, 73.73, 3, 0),
                Column(103, 78.34, 3, 0),
                Column(104.44, 76.42, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(44.75, 117, 3, 0),
                Column(56.27, 123.45, 3, 0),
                Column(66, 122, 3, 0),
                Column(74.5, 118, 3, 0),
                Column(73.54, 116.54, 3, 0),
                Column(64, 117.31, 3, 0),
                Column(57, 117.31, 3, 0),
                Column(44.75, 116, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(62.22, 121.72, 3, 0),
                Column(62.79, 119.61, 3, 0),
                Column(64, 122, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(88, 118, 3, 0),
                Column(98.69, 121.34, 3, 0),
                Column(111.55, 121.53, 3, 0),
                Column(118.46, 119, 3, 0),
                Column(114.62, 116.54, 3, 0),
                Column(93, 116.35, 3, 0),
                Column(87.74, 117.69, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(105.21, 121.34, 3, 0),
                Column(106.75, 118, 3, 0),
                Column(107.52, 120.76, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(40.33, 107.71, 3, 0),
                Column(52, 101, 3, 0),
                Column(71, 102.72, 3, 0),
                Column(73.73, 108.28, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(93, 107, 3, 0),
                Column(106, 102.72, 3, 0),
                Column(117.69, 105.21, 3, 0),
                Column(120.57, 117.69, 3, 0),
                Column(112, 131, 3, 0),
                Column(103, 139, 3, 0),
                Column(90.43, 135.54, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(53.58, 135.35, 3, 0),
                Column(65, 138.61, 3, 0),
                Column(74.31, 133.24, 3, 0),
            ], is_closed=False),
        ])
    if num_floor == 14:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(-1, 5, 3, 0),
                Column(1, 5, 3, 0),
                Column(1, 115, 3, 0),
            ], is_closed=False, texture_name=TEXT_ILLUSION_1),
            # ], is_closed=False, texture_name=TEXT_2),
            Build(column_list=[
                Column(2, 3, 1, 0),
                Column(5, 3, 1, 0),
                Column(3, 5, 1, 1),
            ], is_closed=True, texture_name=TEXT_1),
            Build(column_list=[
                Column(-5, 5, 3, 0),
                Column(-2, 5, 3, 0),
            ], is_closed=True, texture_name=TEXT_GRADIENT),
            Build(column_list=[
                Column(10, 5, 1, 0),
                Column(10, 4, 1, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(10, 4, 2, 0),
                Column(10, 2, 2, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(10, 2, 3, 0),
                Column(10, -1, 3, 0),
            ], is_closed=False),
            Build(column_list=[
                Column(-5, 0, 3, 0),
                Column(-8, 0, 3, 0),
                Column(-8, -3, 3, 0),
                Column(-5, -3, 3, 0),
            ], is_closed=True, texture_name=TEXT_2),
        ])
    if num_floor == 15:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(-3, -4, 3, 0),
                Column(-3, 5, 3, 0),
                Column(-8, 10, 3, 0),
                Column(-8, 15, 3, 0),
                Column(-3, 20, 3, 0),
                Column(3, 20, 3, 0),
                Column(8, 15, 3, 0),
                Column(8, 10, 3, 0),
                Column(2, 5, 3, 0),
                Column(2, -4, 3, 0),
            ], is_closed=False, texture_name=TEXT_KILL),
            # Build(column_list=[
            #     Column(0, 10, 2, 0),
            #     Column(1.9, 10, 2, 0),
            # ], is_closed=False, texture_name=TEXT_GRADIENT),
        ], object_list=[
            # Object(0, 18, 1, 0.5),
            Toflund(x=0, y=13, angle=270),
        ])
    if num_floor == 16:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(-3, -3, 3, 0),
                Column(-3, 5, 3, 0),
                Column(-10, 5, 3, 0),
                Column(-13, 8, 3, 0),
                Column(-13, 17.76, 3, 0),
                Column(-10, 21, 3, 0),
                Column(28, 21, 3, 0),
                Column(31, 18, 3, 0),
                Column(31, 10, 3, 0),
                Column(28, 7, 3, 0),
                Column(6, 7, 3, 0),
                Column(4, 5, 3, 0),
                Column(4, -3, 3, 0),
            ], is_closed=False, texture_name=TEXT_KILL)
        ], object_list=[
            Baggebo(x=0, y=13, angle=0),
            Toflund(x=10, y=13, angle=180)
        ])
    if num_floor == 17:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(100, 7, 3, 0),
                Column(100, 5, 3, 0),
            ], is_closed=False, texture_name=TEXT_MISSING),
            Build(column_list=[
                Column(101, 7, 100, 0),
                Column(101, 5, 100, 0),
            ], is_closed=False, texture_name=TEXT_MISSING),
        ], object_list=[
            Baggebo(x=-1, y=-1.65, angle=33),
            Baggebo(x=-2, y=0, angle=45),
            Baggebo(x=-2, y=1.62, angle=5),
            Baggebo(x=-2, y=3.3804173, angle=327),
            Baggebo(x=-1, y=4, angle=300),
            Baggebo(x=1, y=4.5077743, angle=284),
            Baggebo(x=3.3453167000000006, y=4, angle=257),
            Baggebo(x=6, y=3, angle=201),
            Baggebo(x=7, y=1, angle=180),
            Baggebo(x=7.419907000000002, y=-1, angle=158),
            Baggebo(x=6.566336700000002, y=-2.6751003000000018, angle=138),
            Baggebo(x=5, y=-4, angle=117),
            Baggebo(x=3, y=-4, angle=90),
            Baggebo(x=1, y=-4, angle=74),
            Baggebo(x=-0.5843277000000006, y=-3, angle=51),
            Toflund(x=4, y=-1, angle=135),
            Baggebo(x=-20.90628036126407, y=-13.023551086947089, angle=74),
            Baggebo(x=-20.56390635653087, y=-11.311681063281087, angle=79),
            Baggebo(x=-20.36418818710317, y=-9.942185044348287, angle=82),
            Baggebo(x=-20.05034534943107, y=-7.973534517132385, angle=81),
            Baggebo(x=-19.70797134469787, y=-6.033415156977584, angle=81),
            Baggebo(x=-19.39412850702577, y=-4.578325636861482, angle=82),
            Baggebo(x=-19.080285669353668, y=-3.2088296179286813, angle=72),
            Baggebo(x=-18.76644283168157, y=-2.0390517684235805, angle=82),
            Baggebo(x=-18.509662328131668, y=-0.6410245824296792, angle=78),
            Baggebo(x=-18.309944158703967, y=0.7570026035642219, angle=292),
            Baggebo(x=-17.739320817481968, y=-1.0119297542239796, angle=288),
            Baggebo(x=-17.31135331156547, y=-2.4670192743400805, angle=284),
            Baggebo(x=-16.854854638587867, y=-4.321545133311582, angle=283),
            Baggebo(x=-16.483949466793568, y=-6.147539825221983, angle=291),
            Baggebo(x=-15.970388459693767, y=-7.7452851806435845, angle=278),
            Baggebo(x=-15.542420953777267, y=-9.856591543164987, angle=284),
            Baggebo(x=-15.171515781982967, y=-11.397274564464388, angle=284),
            Baggebo(x=-14.829141777249765, y=-12.852364084580488, angle=288),
            Baggebo(x=-15.913326125571567, y=-12.76677058339719, angle=148),
            Baggebo(x=-17.796383151604168, y=-11.568461566830988, angle=152),
            Baggebo(x=-19.194410337598068, y=-10.741057722059088, angle=149),
            Baggebo(x=-20.44978168828647, y=-9.942185044348287, angle=146),
            Baggebo(x=-21.70515303897487, y=-9.000656531331986, angle=137),
            Baggebo(x=-22.53255688374677, y=-8.372970855987786, angle=139),
            Baggebo(x=-23.388491895579772, y=-7.631160512399185, angle=138),
            Baggebo(x=-24.330020408596074, y=-6.803756667627284, angle=150),
            Baggebo(x=-25.157424253367974, y=-6.261664493466384, angle=135),
            Baggebo(x=-25.756578761651074, y=-5.748103486366583, angle=141),
            Baggebo(x=-25.300080088673475, y=-5.234542479266783, angle=4),
            Baggebo(x=-22.703743886113372, y=-4.949230808655782, angle=3),
            Baggebo(x=-20.56390635653087, y=-4.8065749733502825, angle=10),
            Baggebo(x=-18.68084933049827, y=-4.521263302739282, angle=7),
            Baggebo(x=-17.511071480993166, y=-4.378607467433782, angle=3),
            Baggebo(x=-15.742139123204966, y=-4.264482799189382, angle=7),
            Baggebo(x=-13.944675598355666, y=-4.007702295639482, angle=8),
            Baggebo(x=-12.632241913545064, y=-3.836515293272882, angle=6),
            Baggebo(x=-11.776306901712063, y=-3.750921792089582, angle=9),
            Baggebo(x=-10.777716054573562, y=-3.5512036226618817, angle=217),
            Baggebo(x=-11.890431569956464, y=-4.435669801555982, angle=217),
            Baggebo(x=-13.516708092439165, y=-5.691041152244384, angle=222),
            Baggebo(x=-14.629423607822066, y=-6.7181631664439845, angle=222),
            Baggebo(x=-15.913326125571567, y=-7.973534517132385, angle=236),
            Baggebo(x=-16.769261137404566, y=-9.171843533698587, angle=229),
            Baggebo(x=-17.767851984543068, y=-10.256027882020387, angle=243),
            Baggebo(x=-18.70938049755937, y=-11.368743397403287, angle=231),
            Baggebo(x=-19.62237784351457, y=-12.367334244541789, angle=227),
            Baggebo(x=-20.44978168828647, y=-13.365925091680289, angle=223),
            Baggebo(x=-21.19159203187507, y=-14.07920426820779, angle=65),
        ])
    if num_floor == 18:
        floor = Floor(build_list=[
            Build(column_list=[
                Column(0, 100, 1, 0),
                Column(100, 100, 100, 0),
            ], is_closed=False, texture_name=TEXT_MISSING),
        ], object_list=[
            Baggebo(x=0.01, y=5.63, angle=13),
            Baggebo(x=1.41, y=5.66, angle=353),
            Baggebo(x=3.52, y=5.38, angle=348),
            Baggebo(x=5.03, y=4.78, angle=327),
            Baggebo(x=6.29, y=3.61, angle=287),
            Baggebo(x=6.75, y=1.52, angle=279),
            Baggebo(x=6.8, y=-0.93, angle=260),
            Baggebo(x=6.0, y=-3.1, angle=247),
            Baggebo(x=5.15, y=-4.21, angle=207),
            Baggebo(x=3.04, y=-5.1, angle=197),
            Baggebo(x=0.73, y=-5.61, angle=190),
            Baggebo(x=-1.13, y=-5.81, angle=171),
            Baggebo(x=-3.07, y=-5.3, angle=138),
            Baggebo(x=-4.3, y=-3.67, angle=118),
            Baggebo(x=-4.95, y=-1.99, angle=105),
            Baggebo(x=-5.32, y=0.24, angle=75),
            Baggebo(x=-4.55, y=2.52, angle=59),
            Baggebo(x=-3.24, y=4.23, angle=42),
            Baggebo(x=-1.96, y=5.46, angle=23),
            Baggebo(x=0.21, y=6.46, angle=3),
            Baggebo(x=2.04, y=6.52, angle=354),
            Baggebo(x=4.61, y=6.0, angle=337),
            Baggebo(x=5.63, y=5.52, angle=321),
            Baggebo(x=7.29, y=3.86, angle=291),
            Baggebo(x=7.83, y=1.78, angle=278),
            Baggebo(x=7.97, y=-0.39, angle=260),
            Baggebo(x=7.43, y=-2.76, angle=250),
            Baggebo(x=6.2, y=-4.95, angle=212),
            Baggebo(x=3.89, y=-6.15, angle=198),
            Baggebo(x=1.72, y=-6.66, angle=190),
            Baggebo(x=-1.1, y=-6.89, angle=180),
            Baggebo(x=-3.3, y=-6.64, angle=155),
            Baggebo(x=-4.5, y=-5.72, angle=131),
            Baggebo(x=-5.64, y=-3.93, angle=110),
            Baggebo(x=-6.15, y=-2.38, angle=94),
            Baggebo(x=-6.29, y=-0.19, angle=90),
            Baggebo(x=-5.98, y=1.89, angle=59),
            Baggebo(x=-5.07, y=3.55, angle=55),
            Baggebo(x=-3.61, y=5.23, angle=36),
            Baggebo(x=-1.79, y=6.63, angle=23),
            Baggebo(x=0.04, y=7.26, angle=7),
            Baggebo(x=3.49, y=7.37, angle=349),
            Baggebo(x=5.38, y=6.97, angle=323),
            Baggebo(x=7.2, y=5.72, angle=309),
            Baggebo(x=8.29, y=4.12, angle=288),
            Baggebo(x=8.94, y=1.44, angle=273),
            Baggebo(x=9.0, y=-0.33, angle=267),
            Baggebo(x=8.57, y=-3.04, angle=249),
            Baggebo(x=7.17, y=-5.15, angle=226),
            Baggebo(x=4.98, y=-7.01, angle=205),
            Baggebo(x=1.27, y=-8.12, angle=184),
            Baggebo(x=-2.67, y=-8.35, angle=164),
            Baggebo(x=-5.41, y=-7.06, angle=132),
            Baggebo(x=-6.49, y=-5.44, angle=105),
            Baggebo(x=-7.09, y=-2.67, angle=98),
            Baggebo(x=-7.32, y=0.33, angle=75),
            Baggebo(x=-6.69, y=2.44, angle=65),
            Baggebo(x=-5.27, y=4.83, angle=40),
            Baggebo(x=-3.3, y=6.43, angle=35),
            Baggebo(x=-0.64, y=8.03, angle=12),
            Baggebo(x=1.44, y=8.37, angle=2),
            Baggebo(x=5.38, y=8.14, angle=344),
            Baggebo(x=8.71, y=6.77, angle=306),
            Baggebo(x=10.08, y=4.41, angle=284),
            Baggebo(x=10.68, y=1.3, angle=270),
            Baggebo(x=10.54, y=-0.93, angle=255),
            Baggebo(x=9.68, y=-3.93, angle=243),
            Baggebo(x=8.69, y=-5.95, angle=229),
            Baggebo(x=7.51, y=-7.17, angle=218),
            Baggebo(x=5.61, y=-7.83, angle=213),
            Baggebo(x=3.72, y=-8.76, angle=198),
            Baggebo(x=1.71, y=-9.28, angle=183),
            Baggebo(x=-0.43, y=-9.42, angle=180),
            Baggebo(x=-3.22, y=-9.28, angle=169),
            Baggebo(x=-5.99, y=-8.52, angle=147),
            Baggebo(x=-7.81, y=-6.59, angle=128),
            Baggebo(x=-8.47, y=-4.72, angle=92),
            Baggebo(x=-8.71, y=-2.31, angle=91),
            Baggebo(x=-8.64, y=0.28, angle=77),
            Baggebo(x=-7.75, y=3.01, angle=54),
            Baggebo(x=-5.78, y=5.49, angle=48),
            Baggebo(x=-3.53, y=7.5, angle=27),
            Baggebo(x=-0.63, y=8.81, angle=6),
            Baggebo(x=3.2, y=9.02, angle=354),
            Baggebo(x=5.96, y=8.53, angle=343),
            Baggebo(x=9.34, y=7.53, angle=320),
            Baggebo(x=11.31, y=4.8, angle=282),
            Baggebo(x=11.76, y=1.56, angle=274),
            Baggebo(x=11.83, y=-0.93, angle=261),
            Baggebo(x=10.93, y=-4.31, angle=243),
            Baggebo(x=9.69, y=-6.48, angle=227),
            Baggebo(x=7.0, y=-8.94, angle=205),
            Baggebo(x=4.13, y=-10.01, angle=193),
            Baggebo(x=-0.01, y=-10.63, angle=181),
            Baggebo(x=-4.6, y=-10.32, angle=163),
            Baggebo(x=-7.37, y=-9.25, angle=128),
            Baggebo(x=-9.37, y=-6.52, angle=116),
            Baggebo(x=-10.02, y=-4.72, angle=98),
            Baggebo(x=-10.3, y=-1.69, angle=92),
            Baggebo(x=-9.85, y=1.39, angle=65),
            Baggebo(x=-8.82, y=3.6, angle=57),
            Baggebo(x=-6.99, y=5.7, angle=36),
            Baggebo(x=-5.43, y=7.22, angle=38),
            Baggebo(x=-2.91, y=8.91, angle=12),
        ])

    return floor
